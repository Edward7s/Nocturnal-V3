using UnityEngine;
namespace Nocturnal.Exploits
{
	internal class Zoom
	{
		private static bool zoom = false;
		private static bool zoomToggle = false;
		private static float zoomValue = 60;

		internal static void Run()
		{
			if (Input.GetKeyDown(KeyCode.Mouse4))
			{
				zoom = false;
				if (zoom == false)
				{

					var gameobjhud = GameObject.Find("/UserInterface").transform.Find("PlayerDisplay/WorldHudDisplay/MenuMesh").gameObject;
					gameobjhud.SetActive(false);
					zoomValue = 60;
					zoomToggle = true;

				}
			}
			if (zoomToggle)
			{
				var camerag = Settings.Wrappers.Extensions.MainCamera().GetComponent<Camera>();

				if (zoomValue <= 6)
				{
					zoomValue = 6;
					zoomToggle = false;
					camerag.fieldOfView = zoomValue;
					GameObject.Find("Camera (eye)").transform.Find("StackedCamera : Cam_InternalUI").gameObject.GetComponent<Camera>().fieldOfView = zoomValue;
					return;
				}
				zoomValue -= Time.deltaTime * 200;
				camerag.fieldOfView = zoomValue;
			}
			if (!zoom)
			{

				if (Input.GetKeyUp(KeyCode.Mouse4))
				{
					var camerag = Settings.Wrappers.Extensions.MainCamera().GetComponent<Camera>();

					zoomToggle = false;
					var gameobjhud = GameObject.Find("/UserInterface").transform.Find("PlayerDisplay/WorldHudDisplay/MenuMesh").gameObject;
					gameobjhud.SetActive(true);
					var isperf = 60;
					GameObject.Find("Camera (eye)").transform.Find("StackedCamera : Cam_InternalUI").gameObject.GetComponent<Camera>().fieldOfView = 60;
					camerag.fieldOfView = isperf;

					zoom = true;

				}
			}
		}
	}
}
