using System.Collections;
using UnityEngine;
namespace Nocturnal.Exploits
{
	internal class SitOnBodyParts
	{
		internal static bool sitting = false;
		internal static int part = 0;
		//Unity objects are NOT Thread safe
		//internal static Thread threadsit = new Thread(sitonparts);
		internal static IEnumerator Run()
		{


			if (Settings.Wrappers.Target.targetUser == null)
			{
				yield break;
			}
			Settings.Wrappers.Extensions.ToggleController(!sitting);
			switch (part)
			{
				case 0:
					//Head
					var head = Settings.Wrappers.Target.targetUser._vrcplayer.field_Internal_Animator_0.GetBoneTransform(HumanBodyBones.Head);
					while (sitting)
					{

						VRC.Player.prop_Player_0.transform.position = head.position;
						yield return null;
					}
					break;
				case 1:
					//Right Hand
					var righth = Settings.Wrappers.Target.targetUser._vrcplayer.field_Internal_Animator_0.GetBoneTransform(HumanBodyBones.RightIndexProximal);
					while (sitting)
					{

						VRC.Player.prop_Player_0.transform.position = righth.position;
						yield return null;
					}
					break;
				case 2:
					//Left Hand
					var Left = Settings.Wrappers.Target.targetUser._vrcplayer.field_Internal_Animator_0.GetBoneTransform(HumanBodyBones.LeftIndexProximal);

					while (sitting)
					{

						VRC.Player.prop_Player_0.transform.position = Left.position;
						yield return null;
					}
					break;
				case 3:
					//Right Shoulder
					var rights = Settings.Wrappers.Target.targetUser._vrcplayer.field_Internal_Animator_0.GetBoneTransform(HumanBodyBones.RightShoulder);
					while (sitting)
					{

						VRC.Player.prop_Player_0.transform.position = rights.position;
						yield return null;
					}
					break;
				case 4:
					//Left Shoulder
					var Lefts = Settings.Wrappers.Target.targetUser._vrcplayer.field_Internal_Animator_0.GetBoneTransform(HumanBodyBones.LeftFoot);
					while (sitting)
					{

						VRC.Player.prop_Player_0.transform.position = Lefts.position;
						yield return null;
					}
					break;
			}
			yield return null;
		}

	}
}
